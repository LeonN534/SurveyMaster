/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package creacionEncuesta;

import encuesta.MensajeDialog;
import encuesta.SeleccionPrograma;
import static encuesta.SeleccionPrograma.PASSWORD;
import static encuesta.SeleccionPrograma.URL;
import static encuesta.SeleccionPrograma.USERNAME;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.util.ArrayList;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Random;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.time.Instant;

public class Crearencuesta extends javax.swing.JFrame {

    int preguntaY = 15;
    PanelPregunta panelInicial = new PanelPregunta(preguntaY, preguntas.size());
    public static ArrayList<PanelPregunta> preguntas = new ArrayList<>();
    
    public Crearencuesta() {
        setTitle("Crear nuevo formulario");
        setResizable(false);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        botonAñadirPregunta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("CREAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("CANCELAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 102, 255), 2, true));
        jPanel2.setForeground(new java.awt.Color(255, 229, 122));

        jTextField1.setFont(new java.awt.Font("sansserif", 1, 36)); // NOI18N
        jTextField1.setText("Formulario sin título");
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jTextField2.setText("Descripción del formulario");
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 1020, Short.MAX_VALUE)
                    .addComponent(jTextField2))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jScrollPane1.setHorizontalScrollBar(null);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 1000));

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 2, true));
        jPanel3.setPreferredSize(new java.awt.Dimension(155, 155));
        jPanel3.setLayout(null);

        botonAñadirPregunta.setText("AÑADIR PREGUNTA");
        botonAñadirPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAñadirPreguntaActionPerformed(evt);
            }
        });
        jPanel3.add(botonAñadirPregunta);
        botonAñadirPregunta.setBounds(18, 119, 1021, 25);

        jPanel3.add(panelInicial);
        preguntas.add(panelInicial);

        jScrollPane1.setViewportView(jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(815, 815, 815)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1055, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        if (jTextField1.getText().length() == 100) { 
            evt.consume(); 
        } 
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // TODO add your handling code here:
        if (jTextField2.getText().length() == 100) { 
            evt.consume(); 
        } 
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        preguntas.clear();
        this.dispose();
        SeleccionPrograma ventanaInicial = new SeleccionPrograma();
        ventanaInicial.setLocationRelativeTo(null);
        ventanaInicial.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void botonAñadirPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAñadirPreguntaActionPerformed
        // TODO add your handling code here:
        int posYnuevoPanel = 15;
        for(Component componente : obtenerComponentesPosteriores(botonAñadirPregunta, jPanel3)) {
            posYnuevoPanel = posYnuevoPanel  + 15 + componente.getHeight();
        }
        PanelPregunta nuevaPregunta = new PanelPregunta(posYnuevoPanel, preguntas.size());
        jPanel3.add(nuevaPregunta);
        preguntas.add(nuevaPregunta);
        botonAñadirPregunta.setBounds(17, 105 + posYnuevoPanel ,1020, botonAñadirPregunta.getHeight());

        jPanel3.setPreferredSize(new Dimension(155, jPanel3.getPreferredSize().height + 108));
        
        for(PanelPregunta panel : preguntas) {
            panel.actualizarEstadoDelBoton();
        }
        
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_botonAñadirPreguntaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if(jTextField1.getText().isBlank() || jTextField2.getText().isBlank()) {
            MensajeDialog cuadrosVacios = new MensajeDialog(this, true, "Rellene todos los campos");
            cuadrosVacios.setLocationRelativeTo(null);
            cuadrosVacios.setVisible(true);
        } else {
            MensajeContra modelContrasena = new MensajeContra(this, true, "Cree una contraseña para administrar el formulario");
            modelContrasena.setLocationRelativeTo(null);
            modelContrasena.setVisible(true);
            if (modelContrasena.isAceptado()) {
                // Obtiene la contraseña ingresada
                String contrasena = modelContrasena.getContraseñaIngresada();
                
                try {
                    // Cargar el controlador JDBC
                    Class.forName("com.mysql.cj.jdbc.Driver");

                    // Establecer la conexión con la base de datos
                    Connection conexión = DriverManager.getConnection(URL, USERNAME, PASSWORD);

                    int idFormulario = generarNumeroUnico(conexión);

                    // Consulta SQL para insertar una nueva fila
                    String consultaSQL = "INSERT INTO encuesta (idencuesta, contraseña, titulo, descripcion, tiempoCreacion) VALUES (?, ?, ?, ?, ?)";

                    try (PreparedStatement declaración = conexión.prepareStatement(consultaSQL)) {
                        // Establecer los valores de los parámetros
                        declaración.setInt(1, idFormulario);
                        declaración.setString(2, contrasena);
                        declaración.setString(3, jTextField1.getText());
                        declaración.setString(4, jTextField2.getText());
                        declaración.setTimestamp(5, Timestamp.from(Instant.now()));

                        // Ejecutar la consulta
                        int filasAfectadas = declaración.executeUpdate();

                        // Verificar si la inserción fue exitosa
                        if (filasAfectadas > 0) {
                            // Lógica adicional para la segunda tabla
                            boolean algunaInsercionFallida = false;
                            
                            for(int i = 0; i < preguntas.size(); i ++) {
                                PanelPregunta pregunta = preguntas.get(i);
                                int numeroPregunta = i + 1;
                                int idencuesta = idFormulario;
                                String texto = pregunta.pregunta.getText();
                                String tipoRespuesta = "Texto".equals(pregunta.comboBoxTiposPregunta.getSelectedItem().toString()) ? "Texto" : "OpcionMultiple";
                                String opciones = "";
                                if(tipoRespuesta.equals("Texto")) {
                                    opciones = null;
                                } else {
                                    for (int j = 0; j < pregunta.opciones.size(); j++) {
                                        opciones += pregunta.opciones.get(j).getText();
                                        if (j < pregunta.opciones.size() - 1) {
                                            opciones += ",";
                                        }
                                    }
                                }
                                
                                // Consulta SQL para insertar en la segunda tabla
                                String consultaSQL2 = "INSERT INTO pregunta (numeroPregunta, idencuesta, texto, tipo_Respuesta, opciones) VALUES (?, ?, ?, ?, ?)";

                                try (PreparedStatement declaración2 = conexión.prepareStatement(consultaSQL2)) {
                                    // Establecer los valores de los parámetros para la segunda tabla
                                    declaración2.setInt(1, numeroPregunta);
                                    declaración2.setInt(2, idencuesta);
                                    declaración2.setString(3, texto);
                                    declaración2.setString(4, tipoRespuesta);
                                    declaración2.setString(5, opciones);

                                    // Ejecutar la consulta para la segunda tabla
                                    int filasAfectadas2 = declaración2.executeUpdate();

                                    // Verificar si la inserción en la segunda tabla fue exitosa
                                    if (filasAfectadas2 <= 0) {
                                        // Fallo al insertar en la segunda tabla
                                        algunaInsercionFallida = true;
                                        break;  // Salir del bucle
                                    }
                                }
                            }
                            if (algunaInsercionFallida) {
                                // Lógica para manejar inserciones fallidas en la segunda tabla
                                MensajeDialog preguntasNoCreadas = new MensajeDialog(this, true, "No se pudieron crear todas las preguntas del formulario");
                                preguntasNoCreadas.setLocationRelativeTo(null);
                                preguntasNoCreadas.setVisible(true);
                                preguntas.clear();
                                this.dispose();
                                SeleccionPrograma ventanaInicial = new SeleccionPrograma();
                                ventanaInicial.setLocationRelativeTo(null);
                                ventanaInicial.setVisible(true);
                            } else {
                                // Éxito al insertar en ambas tablas
                                MensajeDialog formularioCreado = new MensajeDialog(this, true, "El formulario se creó con éxito");
                                formularioCreado.setLocationRelativeTo(null);
                                formularioCreado.setVisible(true);
                                mostrarIdEncuesta mostrarID = new mostrarIdEncuesta(this, true, "Comparte el código de tu encuesta para que otros puedan responderla", String.valueOf(idFormulario));
                                mostrarID.setLocationRelativeTo(null);
                                mostrarID.setVisible(true);
                                preguntas.clear();
                                this.dispose();
                                SeleccionPrograma ventanaInicial = new SeleccionPrograma();
                                ventanaInicial.setLocationRelativeTo(null);
                                ventanaInicial.setVisible(true);
                            }
                        } else {
                            MensajeDialog formularioNOCreado = new MensajeDialog(this, true, "El formulario no se puedo crear");
                            formularioNOCreado.setLocationRelativeTo(null);
                            formularioNOCreado.setVisible(true);
                            preguntas.clear();
                            this.dispose();
                            SeleccionPrograma ventanaInicial = new SeleccionPrograma();
                            ventanaInicial.setLocationRelativeTo(null);
                            ventanaInicial.setVisible(true);
                        }
                    }
                } catch (ClassNotFoundException | SQLException e) {
                    e.printStackTrace();
                }
                
            } else {
                preguntas.clear();
                this.dispose();
                SeleccionPrograma ventanaInicial = new SeleccionPrograma();
                ventanaInicial.setLocationRelativeTo(null);
                ventanaInicial.setVisible(true);
            } 
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private static ArrayList<Component> obtenerComponentesPosteriores(Component componente, Container contenedor) {
        Component[] componentes = contenedor.getComponents();
        ArrayList<Component> componentesPosteriores = new ArrayList<>();
        boolean empezarRecorrido = false;

        for (Component c : componentes) {
            if (c == componente) {
                empezarRecorrido = true;
                continue;
            }

            if (empezarRecorrido) {
                // Agrega el componente posterior a la lista
                componentesPosteriores.add(c);
            }
        }

        return componentesPosteriores;
    }
    
    private int obtenerAlturaComponentes(Container container) {
        int alturaTotal = 15;
        Component[] componentes = container.getComponents();

        for (Component componente : componentes) {
            // Sumar la altura de cada componente
            alturaTotal += componente.getHeight() + 15;
        }

        return alturaTotal;
    }
    
    public static int generarNumeroAleatorio() {
        Random random = new Random();
        // Genera un número aleatorio positivo de 6 dígitos
        int numeroAleatorio = random.nextInt(900000) + 100000;
        return numeroAleatorio;
    }
    
    
    public static boolean esNumeroUnico(int numero, Connection connection) throws SQLException {
        String consultaSQL = "SELECT COUNT(*) FROM encuesta WHERE idencuesta = ?";
        try (PreparedStatement statement = connection.prepareStatement(consultaSQL)) {
            statement.setLong(1, numero);
            try (ResultSet resultSet = statement.executeQuery()) {
                resultSet.next();
                int count = resultSet.getInt(1);
                return count == 0;
            }
        }
    }
    
    public static int generarNumeroUnico(Connection connection) throws SQLException {
        int numeroGenerado;
        do {
            numeroGenerado = generarNumeroAleatorio();
        } while (!esNumeroUnico(numeroGenerado, connection));
        return numeroGenerado;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Crearencuesta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Crearencuesta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Crearencuesta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Crearencuesta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Crearencuesta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton botonAñadirPregunta;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
